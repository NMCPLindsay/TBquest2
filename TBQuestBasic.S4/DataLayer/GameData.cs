using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using TBQuestBasic.Models;
using System.Collections.ObjectModel;

namespace TBQuestBasic.DataLayer
{
    public static class GameData
    {

        public static Player PlayerData()
        {

            return new Player()
            {
                Id = 1,
                Name = "Jugo Sabine",
                LocationId = 0,
                Race = Character.Races.Mandalorian,
                Align = Player.Alignments.Evil,
                Level = 1,
                HitPoints = 100,
                EXP = 0,
                Bio = "The mandalorians were a proud race of bounty hunters. The most famous of which are the late Jango Fett and his son, Boba Fett.",
                ImgFileName = new Uri(@"..\..\Assets\mandalorian.jpg", UriKind.Relative)

            };



        }



        public static List<string> InitialMessages(Player player)
        {
            return new List<string>
            {
                $"Hello, {player.Name}. You have been selected to search and apprehend or eliminate contracts from clients of Bounty Force.",
                "Please see the Mission Briefer for your mission and good luck. Do not disappoint."


            };


        }





        public static Map GameMapData()
        {
            Map gameMap = new Map(5, 5, 3);
            //
            //coruscant locations
            //
            gameMap.Locations[0, 0, 0] = new Location()
            {
                Id = 5,
                Name = "Coruscant Orbit",
                Description = "You are in the orbit of the metropolis planet of Coruscant. Located in the Coruscant subsector of the Corusca sector within the Core Worlds region, Coruscant was a planet covered in a dense ecumenopolis. " +
                    "12,240 kilometers in diameter, Coruscant orbited relatively far from its small sun, varying from 207 to 251 million kilometers, " +
                    "and thus did not have a climate that suited any one particular species (although this inconvenience was rectified by technological means and the vast heat generated by the multi-level cityscape). " +
                    "From space, Coruscant's luminosity was slightly dimmed by the planet's hazy cloud cover. The planet's weather patterns were affected by the troposphere-piercing buildings that covered the planet's surface. " +
                    "Inside the tallest buildings, enormous differences of temperature and air pressure from top to bottom produced unusual and unpredictable microclimates. As such, Coruscant had its own weather-control system. " +
                    "Thousands of years of development destroyed the planet's ancient mountains and seas. Monument Plaza housed the top of Coruscant's last remaining mountain peak.",

            };
            gameMap.Locations[0, 1, 0] = new Location()
            {
                Id = 3,
                Name = "Coruscant Spaceport",
                Description = "The spaceport is bustling with travelers of all kinds. The crowded halls make travel slow and theives are prevelant to rob unsuspecting tourists.",
                CanHaveShip = true

            };
            gameMap.Locations[0, 1, 1] = new Location()
            {
                Id = 4,
                Name = "Spaceport Terminal",
                Description = "This is the place where you can board your ship and enter orbit to make light speed calculations to move to another planet. You must have the 'Ship Key' for the ship you wish to pilot.",
                CanHaveShip = true

            };
            gameMap.Locations[0, 2, 0] = new Location()
            {
                Id = 2,
                Name = "City Square",
                Description = "The main city square and location of Bounty Force Headquarters. Here you can go to HQ, shop at the vendors, and (once upon a time) gamble at the arena.",
                 CanHaveShip = false
            };
            gameMap.Locations[0, 2, 1] = new Location()
            {
                Id = 1,
                Name = "Bounty Force HQ",
                Description = "The Headquarters of Bounty Force and your hub for storing resources and getting rewards for bounties. Select the character you wish to speak to concerning the matter.",
                CanHaveShip = false

            };

            //
            //tattooine locations
            //
            gameMap.Locations[1, 0, 0] = new Location()
            {
                Id = 5,
                Name = "Tattooine Orbit",
                Description = "Tatooine was a planet located in the Outer Rim, a region of the galaxy far removed from its core." +
                    " It had three moons, Ghomrassen, Guermessa and Chenini. Long ago, Tatooine was covered in oceans and rainforests but for unknown reasons, it became a hot desert world." +
                    " Tatooine was orbiting its two suns, Tatoo I and Tatoo II. The whole planet was covered in harsh deserts, and only a small part of its northern hemisphere could sustain intelligent life." +
                    " The landscape was covered with sand dunes, mountains, and canyons, which made traversing the planet very difficult." +
                    " Due to the absence of surface water, those who lived on Tatooine had to draw moisture through the dry air.",
                CanHaveShip = true

            };
            gameMap.Locations[1, 1, 0] = new Location()
            {
                Id = 7,
                Name = "Mos Eisley Spaceport",
                Description = "Full of criminals and scoundrels hiding out from Imperial patrols and looking for smuggling runs or con deals, you will never find a mor wretched hive of scum and villany.",
                CanHaveShip = false

            };
            gameMap.Locations[1, 1, 1] = new Location()
            {
                Id = 6,
                Name = "Spaceport Terminal",
                Description = "This is the place where you can board your ship and enter orbit to make light speed calculations to move to another planet. You must have the 'Ship Key' for the ship you wish to pilot.",
                CanHaveShip = true
            };
            gameMap.Locations[1, 2, 0] = new Location()
            {
                Id = 8,
                Name = "Mos Eisley",
                Description = "This is the largest city on Tattooine. The traders have almost anything you want whether its stolen property or not is for you to figure out. The Cantina is a good place to get information and maybe some action." +
                "Head to the junkyard and maybe they have some parts for your ship. Or head out of town to the outskirts but watch for sand people and sandstorms.",
                CanHaveShip = false
            };
            gameMap.Locations[1, 3, 0] = new Location()
            {
                Id = 9,
                Name = "Tattooine Outskirts",
                Description = "Harsh desert climate coupled with sarlaccs, sand people, and jawas (if you are a droid), make adventuring out here not for the faint of heart. The infamous Boba Fett was believed to meet his demise hunting the infamous" +
                " smuggler Han Solo when he fell into a sarlaccs hungry mouth to be digested over 1,000 years.",
                CanHaveShip = false
            };

            //
            //hoth locations
            //
            gameMap.Locations[2, 0, 0] = new Location()
            {
                Id = 10,
                Name = "Hoth Orbit",
                Description = "From space, the planet of Hoth looked like a pale blue orb due to its dense snow and ice covering. " +
                    "Five planets existed between Hoth and its sun, while an asteroid belt surrounded the planet with meteors occasionally striking the surface. Its surface was covered with glaciers and frozen ice plains." +
                    " The temperature, although always frigid, was known to drop to -60°C come nightfall. Although devoid of intelligent life, " +
                    "Hoth was home to fifteen species of large gray snow lizards called tauntauns and to a species of towering predators known as wampas.",
                CanHaveShip = true
            };
            gameMap.Locations[2, 1, 0] = new Location()
            {
                Id = 11,
                Name = "Hoth Wilderness",
                Description = "Being that there is no other life forms, other than the Wampas and Tauntauns, the only place to land your ship is on the face of a frozen cliff. You see remnants of an old Rebel Base from long ago in the distance.",
                CanHaveShip = true
            };
            gameMap.Locations[2, 1, 1] = new Location()
            {
                Id = 12,
                Name = "Abandoned Rebel Base",
                Description = "This place is abandoned. What are you doing here? Look around if you want to.",
                CanHaveShip = true
            };


            return gameMap;
        }



        public static ObservableCollection<Location> ShipRangeToDistance(Location currentLocation, Ship ship)
        {



            ObservableCollection<Location> accessibleLocations = new ObservableCollection<Location>();

            

               
            return accessibleLocations;
        }

        public static List<GameObjects> StandardGameObjects()
        {
            return new List<GameObjects>()
           {
               new Weapons(1001, "Blaster", 5, Weapons.Types.OneHanded, "A single handed basic laser blaster."),
               new Armor(2001, "Mandalore Armor", 10, Armor.Types.Chest, "Traditional chest armor of Mandalorians"),
               new Elixirs(3001, "Bacta Vile", "Recovers 20 hit points", 20),
               new Ship(4001, "YT7000 Correlian", 2, "A freighter ship known for high speeds", Ship.ShipClasses.Freighter),
               new Weapons (1002, "Thermal Detonator", 50, Weapons.Types.Throwable, "Small grenade that packs a punch.")
           };


        }

        private static GameObjects GetGameObjectById(int id)
        {
            return StandardGameObjects().FirstOrDefault(i => i.Id == id);
        }






    }
}
